
题目：


1.抽象类和抽象方法的关系
  有抽象方法的类，一定是抽象类；抽象类不一定有抽象方法
  当子类继承抽象类时，必须要将抽象类中的抽象方法全部实现
 （或者称为重写），否则子类依然是抽象类

2.接口的特点，和作用
  接口特点：
  ①接口不可以被实例化，只能被类实现。
  ②在接口中只能有public修饰和缺省修饰的公共常量和抽象方法
  ③1个类可以实现多个接口,必须要实现所有接口的所有抽象方法
  ④1个接口可以被多个类实现
  ⑤接口也是多态的表现形式
  ⑥接口的引用指向实现类

  作用：解决Java中的单继承问题

3.抽象类和接口的区别

  抽象类中可以有抽象方法和普通方法，也可以有普通变量和常量，可以有构造方法
  接口中只能有抽象方法和静态常量，没有构造方法。


4.类的基类是什么类?__Object_____

5.final修饰的类的特点：___不能被继承____
  final修饰的方法的特点：__不能被重写_____
  final修饰的变量的特点：___不能被修改____

6.static修饰的变量特点：___内存唯一，给所有实例共享____
  static修饰的方法特点：___通过类名.静态方法()____

  

7.static是否可以和abstract连用？为什么_____不可以__
  final是否可以和abstract连用？为什么_____ 不可以__
  static是否可以和final连用？为什么_____   可以__
  接口和抽象类都不可以被实例化？那怎么实例化___接口被类实现implements，抽象被类继承___extends



8.写出四大访问修饰符，并且对应的有效范围
  __public_____    公开的
  __protected_____ 父子友好，同包友好
  __缺省_____      同包友好
  __private_____   同类友好

9.继承的关键词    定义接口的关键词     实现接口的关键词
  ___extends____ __interface_____ ___implements____




复习面向对象：

1.类和对象的关系
类(相同属性和行为的对象的集合)，对象(现实世界存在的可以被描述的事物), 类是对象的类型，对象是类的实例;
2.封装、set/get访问私有属性、构造方法在创建对象的同时赋值.
3.方法：定义方法、方法的重载(在同一个类中，方法名一样，参数个数/数据类型不同)
4.继承：父类、子类、方法的重写(在子类中，方法和父类中方法完全一致，只有方法体不同)
5.super关键  this关键字
6.多态：同一个行为(方法)可以有不同的表现形态。用父类作为引用，根据实际的子类达到不同的操作
       1.继承关系  2.重写  3.父类指向子类
多态性语言具有灵活、抽象、行为共享、代码共享的优势.
7.多态体现方式：重载，继承、接口
8、抽象类和抽象方法
9、接口
  接口特点：
  ①接口不可以被实例化，只能被类实现。
  ②在接口中只能有public修饰和缺省修饰的公共常量和抽象方法
  ③1个类可以实现多个接口,必须要实现所有接口的所有抽象方法
  ④1个接口可以被多个类实现
  ⑤接口也是多态的表现形式
  ⑥接口的引用指向实现类
10、7个关键字



